/*
Animation of a point moving on a circle centered at the origin

A simple example where the drawing content can be calculated from the time t.
*/
module Main;

import Funim;
import Funim.Machine;

import Cairo;
import Math;
import MiscAlgos.Geometry;
import MiscAlgos.Functional;

// FPS
c_fps : F64;
c_fps = 60.0;

// Screen size
c_image_size : (I64, I64);
c_image_size = (800, 600);

// Radius of the circle
c_radius : F64;
c_radius = 100.0;

main : IO ();
main = (
    let config = Funim::Config::default(c_image_size);
    let pos = Funim::clock.map(|t|
        let v = Vec2::make(c_radius, 0.0);
        v.rotated(t * 2.0 * pi64 / 3.0)
    );
    let ani = pos.map(|pos, cairo|
        // The origin of the cairo context is set to the center of the screen
        cairo.set_source_rgb((1.0, 1.0, 1.0));;
        cairo.arc(pos.to_tuple, 10.0, 0.0, 2.0 * pi64);;
        cairo.fill;;
        pure()
    );
    let size_vec = Vec2::make_from_tuple $ c_image_size.map01(to_F64);

    Funim::run_animation(ani, config)
);